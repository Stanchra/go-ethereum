name: CI Deploy, Test Contracts and Push Docker Image

on:
  pull_request:
    types: [closed]  # Trigger when the PR is closed (merged or just closed)
    branches:
      - master  # Trigger only when code is pushed to the master branch

jobs:
  build:
    # Run the jobs only if the PR is merged and the label 'CI:Deploy' is present
    if: contains(github.event.pull_request.labels.*.name, 'CI:Deploy') && github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Get Version and Build number
        run: |
          VERSION="latest"  # Simple static version; could be changed if needed
          BUILDNUM=${GITHUB_RUN_NUMBER}  # Use the GitHub run number as the build number

          # Set environment variables for later steps
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "BUILDNUM=${BUILDNUM}" >> $GITHUB_ENV  

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      
      - name: Run the local Devnet
        run: |
          export DOCKER_HUB_USER=${{ secrets.DOCKER_USERNAME }}
          docker compose up -d
          docker ps -a
          docker port devnet
          docker logs devnet
          docker exec devnet curl -X POST -H "Content-Type: application/json" \
          --data '{"jsonrpc":"2.0","method":"web3_clientVersion","params":[],"id":1}' \
          http://127.0.0.1:8545
          curl -X POST --data '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}' -H "Content-Type: application/json" http://127.0.0.1:8545
      
      - name: Install dependencies and Deploy Contracts
        run: |
          cd hardhat
          npm install
          export HARDHAT_IGNITION_CONFIRM_DEPLOYMENT=false
          npx hardhat ignition deploy ./ignition/modules/Token.js --network devnet --verbose

      # Stop the container and cleanup
      - name: Stop Devnet container
        run: |
          docker compose down  # Stops the containers and removes the network
